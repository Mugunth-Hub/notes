JavaScript Notes

var = var is used to declare a variable in JavaScript, but it does not have block scope and can be redeclared.

Example
var name = "John";
var name = "David"; //  No error, can be redeclared


let = let is used to declare a variable that can be changed later in the block scope.

Example
let age = 25;
age = 30; //  No error, value can be updated


Const = is a keyword in JavaScript for used to create a variable that cannot be changed after it's set. constant only one like -> 
7 days in a week

Example
const name = "John";
name = "David"; //  Error: Cannot change a constant value


let and const have block scope, but var does not.


Console.log = is used to print messages or values to the browser's console for debugging

Example
console.log("Hello, World!");
Hello, World!


A variable is a container that stores data in a program.


Not always! Anything inside double quotes ("") is treated as a string and will print exactly as written, unless there are escape 
characters or special cases.

Example
console.log("Hello, World!"); //  Prints: Hello, World!
console.log("Line1\nLine2");  
// Prints:  
// Line1  
// Line2  (because \n creates a new line)


Alphabets or strings should be in double ("") or single ('') quotes.

Example
console.log("Hello"); //  Valid  
console.log('World'); //  Valid  
console.log(Hello);   //  Error (Hello is not defined)


If a value is inside "" (double quotes) or '' (single quotes), it is a string. 
If not, it is treated as a variable (unless it's a number or keyword).

Example
let name = "John";  //  "John" is a string  
let age = 25;       //  25 is a number (not a string)  
console.log(name);  //  Prints: John  
console.log("name"); //  Prints: name (because it's inside quotes, treated as a string)


+, -, * are operators in JavaScript used for arithmetic operations.

Example
let a = 10, b = 5;

console.log(a + b); //  Addition → 15
console.log(a - b); //  Subtraction → 5
console.log(a * b); //  Multiplication → 50


a, b, c, and d are variables.

Example:
let a = 10;
let b = 20;
let c = 30;
let d = 40;
console.log(a, b, c, d); //  Prints: 10 20 30 40

Pre-increment (++x) increments the value first, then returns the updated value.

Example
let x = 5;
console.log(++x); //  Output: 6 (x is incremented before use)

Post-increment (x++) returns the current value first, then increments it.

Example
let x = 5;
console.log(x++); //  Output: 5 (returns old value, then increments)
console.log(x);   //  Output: 6 (x is now incremented)


Data Type 

Primitive and non-Primitive

A primitive data type is a basic data type that stores simple values directly in memory and is immutable (cannot be changed).
1.Number
2.string
3.boolean
4.null
5.undefined

Non-primitive data types (also called reference types) are complex data structures that store multiple values and are stored 
by reference in memory.
1.Object
2.array


DOM manipulation 
DOM (Document Object Model) Manipulation is the process of changing, adding, or removing elements from a webpage using JavaScript.

In CSS its style tag
in JS its script tag


What is doucmuent.getelementById()?

it a method in the Document object model (DOM) that allows you to select a single element from the Document using by it unique ID attribute IDs
should be unique within the Document meaning that should be only one element with a specfic IDif multiple element have the same  this menthod 
only select the frist one it encounter 


Why is DOM Manipulation Important?
1. Makes web pages dynamic and interactive.
2. Updates content without refreshing the page.
3. Enhances user experience with real-time changes.


1.1 What is an Event?

An event is an action or occurrence detected by JavaScript, such as:
1. Clicking a button (click)
2. Typing in an input field (input)
3. Pressing a key (keydown)
4. Moving the mouse (mousemove)

1.2 What is an Event Handler?

An event handler is a function that runs when an event occurs.


input tag we manipulate value 
<h1> <p> we manipulate text 


Random Numbers 